encoding=UTF-8
#********************************************************************
# Wrapper Properties
#********************************************************************
# Java Application
wrapper.java.command=java
wrapper.working.dir=..

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp
set.default.APP_BASE=.

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1=./lib/wrapper.jar
wrapper.java.classpath.2=./conf
wrapper.java.classpath.3=./app/thinkehr-server.jar

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=./lib

# Java Additional Parameters
wrapper.java.additional.1=-Dorg.tanukisoftware.wrapper.WrapperSimpleApp.maxStartMainWait=300
wrapper.java.additional.2=-Djava.awt.headless=true
wrapper.java.additional.3=-XX:+UseG1GC
wrapper.java.additional.4=-Xmx4g
wrapper.java.additional.5=-Dthinkehr.messages.locale=en
wrapper.java.additional.6=-Djava.net.preferIPv4Stack=true
# specify how compositions are serialized when written to the db:
# java (native java serialization), protostuff (binary), json and KRYO (binary)
# default is java, suggested for best performance and size is KRYO
wrapper.java.additional.7=-Dthinkehr.serialization=KRYO

# Initial Java Heap Size (in MB)
wrapper.java.initmemory=512

# Maximum Java Heap Size (in MB) - set 0 and add -Xmx
wrapper.java.maxmemory=0

# Application parameters.  Set profiles here.
# inidus - added adminrest support
wrapper.app.parameter.1=com.marand.thinkehr.server.ThinkEhrServer
wrapper.app.parameter.2=-p
wrapper.app.parameter.3=httpremoting,query,rest,adminrest,demographics # integration,remoting

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=logs/wrapper.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=0

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=0

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper Windows Properties
#********************************************************************
# Title to use when running as a console
wrapper.console.title=Marand ThinkEhr

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.ntservice.name=thinkehr

# Display name of the service
wrapper.ntservice.displayname=Marand ThinkEhr

# Description of the service
wrapper.ntservice.description=Marand ThinkEhr

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false

# restart on failure
wrapper.on_exit.default=RESTART
wrapper.on_exit.0=SHUTDOWN
wrapper.restart.delay=10
wrapper.ping.timeout=60
wrapper.startup.timeout=120

wrapper.license.type=DEV
wrapper.license.id=201501210000010
wrapper.license.licensee=MARAND d.o.o.
wrapper.license.group=Think!EHR
wrapper.license.dev_application=Think!EHR
wrapper.license.features=64bit
wrapper.license.key.0=54be-6d70-5882-25f0
wrapper.license.key.1=d5f0-6c21-6407-7d7b
wrapper.license.key.2=a7df-4614-1ba1-28eb
wrapper.license.key.3=3116-6615-1e35-2a92
wrapper.license.key.4=d687-7ac4-fe3e-c148
